@page "/"
@using BlazorCustomControls.ViewModels

<h1>Maker.AI Controls Demo</h1>
<Toggle @bind-IsOn="ViewModel.IsReadOnlyMode" />
<p>Controls are @(ViewModel.IsReadOnlyMode ? "Read Only Mode" : "Read Write Mode")</p>


<!-- Dropdown Field -->
<h2>Editable Dropdown Field</h2>
<Dropdown Label="Select Country"
                       Class="col-md-6"
                       Items="@(ViewModel.Countries)"
                       @bind-SelectedValue="@(ViewModel["SelectedCountry"])"
                       IsReadOnly="@ViewModel.IsReadOnlyMode" />
<p>Selected Country: @ViewModel["SelectedCountry"]</p>

<!-- Input Fields -->
<h2>Editable Input Fields</h2>
<Input Label="First Name"
                    Class="col-md-6"
                    @bind-Value="@(ViewModel.FirstName)"
                    IsReadOnly="@ViewModel.IsReadOnlyMode" />
<Input Label="Last Name"
                    Class="col-md-6"
                    @bind-Value="@(ViewModel["LastName"])"
                    IsReadOnly="@ViewModel.IsReadOnlyMode" />
<p>Full Name: @ViewModel.FullName</p>

<!-- Email Field -->
<h2>Email Fields</h2>
<EmailInput Label="Email Address"
                    Class="col-md-6"
                    @bind-Value="ViewModel.Email"
                    IsReadOnly="@ViewModel.IsReadOnlyMode"
                    IsVisible="true" />

<p>Entered Email: @ViewModel.Email</p>

<!-- Enum Dropdown -->
<h2>Enum Dropdown Field</h2>
<EnumDropdown TEnum="StatusEnum"
                   Label="Select Status"
                   @bind-SelectedValue="ViewModel.Status"
                   IsReadOnly="@ViewModel.IsReadOnlyMode" />
<p>Selected Status: @ViewModel.Status</p>

<!-- Date Input -->
<h2>Date Input Field</h2>
<DatePicker Label="Select Date"
                @bind-Value="ViewModel.DateOfBirth"
                IsReadOnly="@ViewModel.IsReadOnlyMode" />
<p>Selected Date: @ViewModel.DateOfBirth.ToString("yyyy-MM-dd")</p>

<!-- Number Inputs -->
<h2>Editable Number Fields</h2>
<NumberInput Label="Signed Integer Value"
                     @bind-Value="ViewModel.SignedValue"
                     IsUnsigned="false"
                     Class="col-md-6"
                     IsReadOnly="@ViewModel.IsReadOnlyMode" />
<NumberInput Label="Unsigned Integer Value"
                     @bind-Value="ViewModel.UnsignedValue"
                     IsUnsigned="true"
                     Class="col-md-6"
                     IsReadOnly="@ViewModel.IsReadOnlyMode" />
<NumberInput Label="Decimal Value"
                     @bind-Value="ViewModel.DecimalValue"
                     Class="col-md-6"
                     IsReadOnly="@ViewModel.IsReadOnlyMode" />
<NumberInput Label="Double Value"
                     @bind-Value="ViewModel.DoubleValue"
                     Class="col-md-6"
                     IsReadOnly="@ViewModel.IsReadOnlyMode" />

<!-- Textarea Field -->
<h2>Editable Textarea Field</h2>
<Textarea Label="Description"
                       Class="col-md-6"
                       @bind-Value="ViewModel.Description"
                       IsReadOnly="@ViewModel.IsReadOnlyMode" />

<!-- Toggle Button -->
<h2>Toggle Button</h2>
<Toggle @bind-IsOn="ViewModel.IsFeatureEnabled" IsReadOnly="@ViewModel.IsReadOnlyMode" />
<p>Feature is @(ViewModel.IsFeatureEnabled ? "Enabled" : "Disabled")</p>

<!-- Radio Group -->
<h2>Radio Group</h2>
<RadioGroup @bind-SelectedValue="ViewModel.SelectedOption" IsReadOnly="@ViewModel.IsReadOnlyMode">
    <RadioButton Value="Option1" Label="Option 1" />
    <RadioButton Value="Option2" Label="Option 2" />
    <RadioButton Value="Option3" Label="Option 3" />
</RadioGroup>
<p>Selected Option: @ViewModel.SelectedOption</p>

<!-- CheckBox -->
<Checkbox Label="Accept Terms and Conditions"
          @bind-Value="ViewModel.IsTermsAccepted"
          IsReadOnly="@ViewModel.IsReadOnlyMode"/>

<p>Terms Accepted: @(ViewModel.IsTermsAccepted ? "Yes" : "No")</p>

@code {
    // ViewModel holds the state for all demo controls
    private HomeViewModel ViewModel = new();
}
